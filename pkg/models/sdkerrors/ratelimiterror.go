// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package sdkerrors

import (
	"encoding/json"
	"fmt"
)

// RateLimitErrorType - rate_limit_error
type RateLimitErrorType string

const (
	RateLimitErrorTypeRateLimitError RateLimitErrorType = "rate_limit_error"
)

func (e RateLimitErrorType) ToPointer() *RateLimitErrorType {
	return &e
}

func (e *RateLimitErrorType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limit_error":
		*e = RateLimitErrorType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RateLimitErrorType: %v", v)
	}
}

type RateLimitError struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	// rate_limit_error
	Type *RateLimitErrorType `json:"type,omitempty"`
}

var _ error = &RateLimitError{}

func (e *RateLimitError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
